/*
 * Copyright (c) 2020 dELLIKEEb
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

// custom keycode defs for easier access
#define DEFAULT 0
#define MOD     1
#define MAC     2
#define LOWER   3
#define RAISE   4
#define ADJUST  5

// / {
//     behaviors {
//         hm: homerow_mods {
//             compatible = "zmk,behavior-hold-tap";
//             label = "homerow mods";
//             #binding-cells = <2>;
//             tapping_term_ms = <225>;
//             flavor = "tap-preferred";
//             bindings = <&kp>, <&kp>;
//         };
//     };
// };

// BASE
// -------------------------------------------               -------------------------------------------
// |   `  |   1  |   2  |   3  |   4  |   5  |               |   6  |   7  |   8  |   9  |   0  | Bksp |
// -------------------------------------------               -------------------------------------------
// | Tab  |   Q  |   W  |   E  |   R  |   T  |               |   Y  |   U  |   I  |   O  |   P  | Del  |
// -------------------------------------------   ---------  --------------------------------------------
// | Esc  |   A  |   S  |   D  |   F  |   G  |   | Right |   |   H  |   J  |   K  |   L  |   ;  |Enter |
// -------------------------------------------   ---------   -------------------------------------------
// | Shift|   Z  |   X  |   C  |   V  |   B  |   | LEFT  |   |   N  |   M  |   ,  |   .  |   /  | "    |
// -------------------------------------------   ---------   -------------------------------------------
//        | Ctrl | GUI  |  Alt |Lower |Space |               |Space |Raise |Alt   | DOWN | UP   |
//        ------------------------------------               ------------------------------------
// 

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp ESC     &kp N1      &kp N2      &kp N3      &kp N4    &kp N5                    &kp N6      &kp N7      &kp N8      &kp N9      &kp N0      &kp BKSP
                &kp TAB     &kp Q       &kp W       &kp E       &kp R     &kp T                     &kp Y       &kp U       &kp I       &kp O       &kp P       &kp BSLH
                &kp LCTL    &kp A       &kp S       &kp D       &kp F     &kp G         &kp C_PP    &kp H       &kp J       &kp K       &kp L       &kp SCLN    &kp SQT
                &kp LSFT    &kp Z       &kp X       &kp C       &kp V     &kp B         &kp C_MUTE  &kp N       &kp M       &kp CMMA    &kp DOT     &kp FSLH    &mt RSFT
                            &kp LGUI    &kp LALT    &mo LOWER   &kp ENTER &kp SPC                   &kp SPC     &kp ENTER   &mo RAISE   &kp DARW    &kp UARW
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_AL_NEXT_TASK C_AL_PREV_TASK>;
        };

        mod_layer {
            bindings = <
                &trans      &trans      &trans      &trans      &trans      &trans                  &trans      &trans      &trans      &trans      &trans      &trans  
                &trans      &trans      &trans      &trans      &trans      &trans                  &trans      &trans      &trans      &trans      &trans      &trans
                &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans
                &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans 
                            &trans      &trans      &trans      &trans      &kp SPC                 &kp SPC     &trans      &trans      &trans      &trans
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_AL_NEXT_TASK C_AL_PREV_TASK>;
        };

        mac_layer {
            bindings = <
                &trans      &trans      &trans      &trans      &trans      &trans                  &trans      &trans      &trans      &trans      &trans      &trans  
                &trans      &trans      &trans      &trans      &trans      &trans                  &trans      &trans      &trans      &trans      &trans      &trans
                &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans
                &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans 
                            &kp LCTL    &kp LALT    &kp LGUI    &trans      &trans                  &trans      &trans      &kp RGUI    &trans      &trans
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_AL_NEXT_TASK C_AL_PREV_TASK>;
        };

        lower_layer {
            bindings = <
                &kp TILDE   &kp EXCL    &kp AT      &kp POUND   &kp DLLR    &kp PRCNT               &kp CARET   &kp AMPS    &kp STAR    &kp MINUS   &kp EQUAL     &kp PG_UP  
                &kp LCTL    &kp N1      &kp N2      &kp N3      &kp N4      &kp KP_MINUS            &kp KP_PLUS &kp KP_N7   &kp KP_N8   &kp KP_N9   &kp KP_N0     &trans
                &kp LSFT    &kp LARW    &kp DARW    &kp UARW    &kp RARW    &kp LBRC    &kp UARW    &kp RBRC    &kp KP_N4   &kp KP_N5   &kp KP_N6   &kp KP_PLUS   &trans
                &trans      &kp LALT    &trans      &trans      &trans      &kp LBKT    &kp DARW    &kp RBKT    &kp KP_N1   &kp KP_N2   &kp KP_N3   &kp KP_MINUS  &kp SQT
                            &mo ADJUST  &trans      &trans      &kp LALT    &kp DEL                 &kp DEL     &kp RALT    &kp KP_N0   &trans      &mo ADJUST
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_AL_NEXT_TASK C_AL_PREV_TASK>;
        };

        raise_layer {
            bindings = <
                &kp F12              &kp F1      &kp F2      &kp F3            &kp F4      &kp F5                      &kp F6      &kp F7      &kp F8             &kp F9      &kp F10     &kp F11  
                &rgb_ug RGB_TOG      &kp EXCL    &kp AT      &kp POUND         &kp DLLR    &kp PRCNT                   &kp CARET   &kp AMPS    &kp STAR           &kp LPAR    &kp RPAR    &trans
                &kp RGB_EFF          &kp C_PREV  &kp C_NEXT  &kp C_VOL_UP      &kp PG_UP   &kp UNDER     &kp C_VOL_UP  &kp EQUAL   &kp HOME    &rgb_ug RGB_HUI    &kp LBRC    &kp RBRC    &trans 
                &kp C_MUTE           &kp C_STOP  &kp C_PLAY  &kp C_VOL_DN      &kp PG_DN   &kp MINUS     &kp C_VOL_DN  &kp KP_PLUS &kp END     &rgb_ug RGB_HUD    &kp LBKT    &kp RBKT    &trans
                                     &mo ADJUST  &trans      &trans            &trans      &trans                      &trans      &trans      &trans             &trans      &mo ADJUST
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_AL_NEXT_TASK C_AL_PREV_TASK>;
        };
        
        adjust_layer {
            bindings = <
                &bootloader &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4                    &trans      &trans      &trans      &trans      &trans      &bt BT_CLR        
                &trans      &rgb_ug RGB_TOG &rgb_ug RGB_EFF &rgb_ug RGB_EFR &rgb_ug RGB_BRI &rgb_ug RGB_BRD                 &trans      &trans      &trans      &trans      &trans      &trans
                &kp CAPS    &rgb_ug RGB_HUI &rgb_ug RGB_HUD &rgb_ug RGB_SAI &rgb_ug RGB_SAD &trans          &kp C_VOL_UP    &trans      &trans      &trans      &trans      &trans      &trans  
                &trans      &trans          &trans          &trans          &trans          &trans          &kp C_VOL_DN    &tog MOD    &tog MAC    &trans      &trans      &trans      &trans  
                            &trans          &trans          &trans          &trans          &trans                          &trans      &trans      &trans      &trans      &trans
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_AL_NEXT_TASK C_AL_PREV_TASK>;
            
        };

    };
};